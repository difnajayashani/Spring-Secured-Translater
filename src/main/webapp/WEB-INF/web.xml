<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
         http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">

  <display-name>Archetype Created Web Application</display-name>

    <!-- Spring Security Configuration File -->
    <!--used to specify the path of spring config files,so that they'll be initialized.-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/spring-security.xml</param-value>
    </context-param>

    <!-- Spring Security Filter -->
    <!--When using servlet filters,for the servlet container to identify them ,it is declared in web.xml.In Spring Security,
    the filter classes are also Spring beans defined in the application context. Spring's DelegatingFilterProxy
    provides the link between web.xml and the application context.-->
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!--ContextLoaderListener performs the actual initialization work for the root application context
     ContextLoaderListener reads the Spring configuration file  parses it and loads the bean defined in that config file..-->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!--servlet receives all requests and transfers them to to all other components of the application.
    The task of the DispatcherServlet is send request to the specific Spring MVC controller. It is configured to be
    loaded as the first servlet-->
    <servlet>
        <servlet-name>spring</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <!--here any request can be handled by this DispatcherServlet -->
    <servlet-mapping>
        <servlet-name>spring</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    <!-- Spring MVC - END -->

</web-app>
